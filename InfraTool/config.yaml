server:
  port: 5015
  loki:
    login: !secret(loki_login)
    password: !secret(loki_password)
groups:
#  - name: backups
#    items:
#      - name: "HA Estate"
#        actual:
#          retriever:
#            type: webdav_list
#            url: "https://next.olegtarasov.me/remote.php/dav/files/backups/home_assistant/estate/Auto"
#            username: !secret(nextclod_username)
#            password: !secret(nextcloud_password)
#          processors:
#            - type: regex
#              expr: '^.*?Auto-.*?-(.*?)\..*$'
#              replace: "$1"
#            - date_format: "yyyy-MM-dd_hhmm"
#              mode: latest
#        expected:
#          retriever: cur_time
#        comparer:
#          max_delta: 1d4h
  - name: versions
    comparer: version
    variables:
      NODE_EXPORTER_LATEST:
        retriever:
          type: gh_release
          repo: prometheus/node_exporter
        processors:
          - type: regex
            expr: "v(.*)"          
    items:
#      - name: "Test"
#        actual:
#          retriever:
#            type: var
#            name: NODE_EXPORTER_LATEST
#        expected:
#          retriever:
#            type: var
#            name: NODE_EXPORTER_LATEST
      - name: "Ghost"
        actual:
          retriever:
            type: cmd
            command: ghost version --no-color --no-prompt
            chdir: /var/www/olegtarasov.me
          processors:
            - type: regex
              expr: '^Ghost version:\s(.*?)\s'
        expected:
          retriever:
            type: cmd
            command: ghost check-update --no-prompt --no-color
            chdir: /var/www/olegtarasov.me
          processors:
            - type: regex
              expr: '^Latest version:\s(.*)$'
      - name: "vaultwarden"
        actual:
          retriever:
            type: cmd
            command: docker exec vaultwarden ./vaultwarden -v
          processors:
            - type: regex
              expr: '^Vaultwarden\s(.*)'
        expected:
          retriever:
            type: gh_release
            repo: dani-garcia/vaultwarden
      - name: "vaultwarden-backup"
        actual:
          retriever:
            type: cmd
            command: docker inspect vaultwarden_backup | jq -r '.[0].Image' | xargs docker image inspect | jq -r '.[0].RepoTags[0]'
          processors:
            - type: regex
              expr: "vaultwarden-backup:(.*)"
        expected:
          retriever:
            type: gh_release
            repo: ttionya/vaultwarden-backup
          processors:
            - type: regex
              expr: "v(.*)"
      - name: "Mailinabox"
        variables:
          MIB_LOGIN:
            retriever:
              type: cmd
              command: |
                if [ -z "$MIB_LOGIN" ]; then
                  bw get username !secret(bw_mib_id) --session !secret(bw_session)
                else
                  echo $MIB_LOGIN
                fi
          MIB_TOKEN:
            retriever:
              type: cmd
              command: |
                if curl -fs -o /dev/null -X GET "https://box.olegtarasov.email/admin/system/version" -u "$MIB_LOGIN:$MIB_TOKEN"; then
                  echo $MIB_TOKEN
                else
                  PASS=$(bw get password !secret(bw_mib_id) --session !secret(bw_session))
                  TOTP=$(bw get totp !secret(bw_mib_id) --session !secret(bw_session))
                  curl -s -X POST "https://box.olegtarasov.email/admin/login" -u "$MIB_LOGIN:$PASS" -H "x-auth-token: $TOTP" | jq -r ".api_key"
                fi
        actual:
          retriever:
            type: cmd
            command: curl -s -X GET "https://box.olegtarasov.email/admin/system/version" -u "$MIB_LOGIN:$MIB_TOKEN"
          processors:
            - type: regex
              expr: "^v(.*)"
              replace: "$1.0.0"
        expected:
          retriever:
            type: cmd
            command: curl -s -X POST "https://box.olegtarasov.email/admin/system/latest-upstream-version" -u "$MIB_LOGIN:$MIB_TOKEN"
          processors:
            - type: regex
              expr: "^v(.*)"
              replace: "$1.0.0"
      - name: "Nextcloud"
        actual:
          retriever:
            type: cmd
            command: sudo chmod +x occ && sudo -u www-data ./occ status
            chdir: /var/www/nextcloud
          processors:
            - type: regex
              expr: 'versionstring:\s(.*)'
        expected:
          retriever:
            type: gh_release
            repo: nextcloud/server
          processors:
            - type: regex
              expr: "v(.*)"
      - name: "Grafana"
        actual:
          retriever:
            type: cmd
            command: grafana-server -v
          processors:
            - type: regex
              expr: '^Version\s(.*?)\s'
        expected:
          retriever:
            type: gh_release
            repo: grafana/grafana
          processors:
            - type: regex
              expr: "v(.*)"
      - name: "Prometheus"
        actual:
          retriever:
            type: cmd
            command: prometheus --version
          processors:
            - type: regex
              expr: '^prometheus, version\s(.*?)\s'
        expected:
          retriever:
            type: gh_release
            repo: prometheus/prometheus
          processors:
            - type: regex
              expr: "v(.*)"
      - name: "Loki"
        actual:
          retriever:
            type: cmd
            command: loki --version
          processors:
            - type: regex
              expr: '^loki, version\s(.*?)\s'
        expected:
          retriever:
            type: gh_release
            repo: grafana/loki
          processors:
            - type: regex
              expr: "v(.*)"
      - name: "FreshRSS"
        actual:
          retriever:
            type: cmd
            command: cat constants.php
            chdir: /var/www/freshrss
          processors:
            - type: regex
              expr: "FRESHRSS_VERSION = '(.*?)'"
        expected:
          retriever:
            type: gh_release
            repo: FreshRSS/FreshRSS
          processors:
            - type: regex
              expr: "(.*)"
      - name: "Matomo"
        actual:
          retriever:
            type: cmd
            command: sudo chmod +x console && sudo -u www-data ./console core:version
            chdir: /var/www/matomo
        expected:
          retriever:
            type: gh_release
            repo: matomo-org/matomo
          processors:
            - type: regex
              expr: "(.*)"
      - name: "Headscale"
        actual:
          retriever:
            type: cmd
            command: headscale version
          processors:
            - type: regex
              expr: "v(.*)"
        expected:
          retriever:
            type: gh_release
            repo: juanfont/headscale
          processors:
            - type: regex
              expr: "v(.*)"
      - name: "bittorrent-tracker"
        actual:
          retriever:
            type: cmd
            command: docker inspect bittorrent-tracker | jq -r '.[0].Image' | xargs docker image inspect | jq -r '.[0].RepoTags[0]'
          processors:
            - type: regex
              expr: "jarylc/bittorrent-tracker:(.*)"
        expected:
          retriever:
            type: gh_release
            repo: webtorrent/bittorrent-tracker
          processors:
            - type: regex
              expr: "v(.*)"
      - name: "NodeExporter (Services)"
        actual:
          retriever:
            type: cmd
            command: curl http://localhost:9100
          processors:
            - type: regex
              expr: "version=(.*?),"
        expected:
          retriever:
            type: var
            name: NODE_EXPORTER_LATEST
      - name: "NodeExporter (Mailinabox)"
        variables:
          PROM_LOGIN:
            retriever:
              type: cmd
              command: |
                if [ -z "$PROM_LOGIN" ]; then
                  bw get username !secret(bw_prometheus_id) --session !secret(bw_session)
                else
                  echo $PROM_LOGIN
                fi
          PROM_PASS:
            retriever:
              type: cmd
              command: |
                if [ -z "$PROM_PASS" ]; then
                  bw get password !secret(bw_prometheus_id) --session !secret(bw_session)
                else
                  echo $PROM_PASS
                fi
        actual:
          retriever:
            type: cmd
            command: curl "https://olegtarasov.email/node_exporter/" -u "$PROM_LOGIN:$PROM_PASS"
          processors:
            - type: regex
              expr: "version=(.*?),"
        expected:
          retriever:
            type: var
            name: NODE_EXPORTER_LATEST
