server:
  port: 5015
  loki:
    login: !secret(loki_login)
    password: !secret(loki_password)
items:
  - name: "Ghost"
    local:
      retriever:
        cmd: ghost version --no-color --no-prompt
        work_dir: /var/www/olegtarasov.me
      processors:
        - regex: '^Ghost version:\s(.*?)\s'
    remote:
      retriever:
        cmd: ghost check-update --no-prompt --no-color
        work_dir: /var/www/olegtarasov.me
      processors:
        - regex: '^Latest version:\s(.*)$'
  - name: "vaultwarden"
    local:
      retriever:
        cmd: docker exec vaultwarden ./vaultwarden -v
      processors:
        - regex: '^Vaultwarden\s(.*)'
    remote:
      retriever:
        cmd: gh api repos/dani-garcia/vaultwarden/releases/latest -q ".tag_name"
  - name: "vaultwarden-backup"
    local:
      retriever:
        cmd: docker inspect vaultwarden_backup | jq -r '.[0].Image' | xargs docker image inspect | jq -r '.[0].RepoTags[0]'
      processors:
        - regex: "vaultwarden-backup:(.*)"
    remote:
      retriever:
        cmd: gh api repos/ttionya/vaultwarden-backup/releases/latest -q ".tag_name"
      processors:
        - regex: "v(.*)"
  - name: "Mailinabox"
    variables:
      MIB_LOGIN: |
        if [ -z "$MIB_LOGIN" ]; then
          bw get username !secret(bw_mib_id) --session !secret(bw_session)
        else
          echo $MIB_LOGIN
        fi
      MIB_TOKEN: |
        if curl -fs -o /dev/null -X GET "https://box.olegtarasov.email/admin/system/version" -u "$MIB_LOGIN:$MIB_TOKEN"; then
          echo $MIB_TOKEN
        else
          PASS=$(bw get password !secret(bw_mib_id) --session !secret(bw_session))
          TOTP=$(bw get totp !secret(bw_mib_id) --session !secret(bw_session))
          curl -s -X POST "https://box.olegtarasov.email/admin/login" -u "$MIB_LOGIN:$PASS" -H "x-auth-token: $TOTP" | jq -r ".api_key"
        fi
    local:
      retriever:
        cmd: curl -s -X GET "https://box.olegtarasov.email/admin/system/version" -u "$MIB_LOGIN:$MIB_TOKEN"
      processors:
        - regex: "^v(.*)"
          replace: "$1.0.0"
    remote:
      retriever:
        cmd: curl -s -X POST "https://box.olegtarasov.email/admin/system/latest-upstream-version" -u "$MIB_LOGIN:$MIB_TOKEN"
      processors:
        - regex: "^v(.*)"
          replace: "$1.0.0"
  - name: "Nextcloud"
    local:
      retriever:
        cmd: sudo chmod +x occ && sudo -u www-data ./occ status
        work_dir: /var/www/nextcloud
      processors:
        - regex: 'versionstring:\s(.*)'
    remote:
      retriever:
        cmd: gh api repos/nextcloud/server/releases/latest -q ".tag_name"
      processors:
        - regex: "v(.*)"
  - name: "Grafana"
    local:
      retriever:
        cmd: grafana-server -v
      processors:
        - regex: '^Version\s(.*?)\s'
    remote:
      retriever:
        cmd: gh api repos/grafana/grafana/releases/latest -q ".tag_name"
      processors:
        - regex: "v(.*)"
  - name: "Prometheus"
    local:
      retriever:
        cmd: prometheus --version
      processors:
        - regex: '^prometheus, version\s(.*?)\s'
    remote:
      retriever:
        cmd: gh api repos/prometheus/prometheus/releases/latest -q ".tag_name"
      processors:
        - regex: "v(.*)"
  - name: "Loki"
    local:
      retriever:
        cmd: loki --version
      processors:
        - regex: '^loki, version\s(.*?)\s'
    remote:
      retriever:
        cmd: gh api repos/grafana/loki/releases/latest -q ".tag_name"
      processors:
        - regex: "v(.*)"
  - name: "FreshRSS"
    local:
      retriever:
        cmd: cat constants.php
        work_dir: /var/www/freshrss
      processors:
        - regex: "FRESHRSS_VERSION = '(.*?)'"
    remote:
      retriever:
        cmd: gh api repos/FreshRSS/FreshRSS/releases/latest -q ".tag_name"
      processors:
        - regex: "(.*)"
  - name: "Matomo"
    local:
      retriever:
        cmd: sudo chmod +x console && sudo -u www-data ./console core:version
        work_dir: /var/www/matomo
    remote:
      retriever:
        cmd: gh api repos/matomo-org/matomo/releases/latest -q ".tag_name"
      processors:
        - regex: "v(.*)"
  - name: "Headscale"
    local:
      retriever:
        cmd: headscale version
      processors:
        - regex: "v(.*)"
    remote:
      retriever:
        cmd: gh api repos/juanfont/headscale/releases/latest -q ".tag_name"
      processors:
        - regex: "v(.*)"
