items:
  - name: 'Ghost'
    local:
      cmd: ghost
      args: version --no-color --no-prompt
      work_dir: /var/www/olegtarasov.me
      processors:
        - regex: '^Ghost version:\s(.*?)\s'
    remote:
      cmd: ghost
      args: check-update --no-prompt --no-color
      work_dir: /var/www/olegtarasov.me
      processors:
        - regex: '^Latest version:\s(.*)$'
  - name: 'vaultwarden'
    local:
      cmd: docker
      args: exec vaultwarden ./vaultwarden -v
      processors:
        - regex: '^vaultwarden\s(.*)'
    remote:
      cmd: gh
      args: api repos/dani-garcia/vaultwarden/releases/latest -q ".tag_name"
  - name: 'vaultwarden-backup'
    local:
      cmd: bash
      args: -c "docker inspect vaultwarden_backup | jq -r '.[0].Image' | xargs docker image inspect | jq -r '.[0].RepoTags[0]'"
      processors:
        - regex: 'vaultwarden-backup:(.*)'
    remote:
      cmd: gh
      args: api repos/ttionya/vaultwarden-backup/releases/latest -q ".tag_name"
      processors:
        - regex: 'v(.*)'
  - name: 'Mailinabox'
    local:
      cmd: curl
      args: -s -X GET "https://box.olegtarasov.email/admin/system/version" -u "!secret(mib_api_login):!secret(mib_api_key)"
      processors:
        - regex: '^v(.*)'
          replace: '$1.0.0'
    remote:
      cmd: curl
      args: -s -X POST "https://box.olegtarasov.email/admin/system/latest-upstream-version" -u "!secret(mib_api_login):!secret(mib_api_key)"
      processors:
        - regex: '^v(.*)'
          replace: '$1.0.0'
  - name: 'Nextcloud'
    local:
      cmd: bash
      args: -c "sudo chmod +x occ && sudo -u www-data ./occ status"
      work_dir: /var/www/nextcloud
      processors:
        - regex: 'versionstring:\s(.*)'
    remote:
      cmd: gh
      args: api repos/nextcloud/server/releases/latest -q ".tag_name"
      processors:
        - regex: 'v(.*)'
  - name: 'Grafana'
    local:
      cmd: grafana-server
      args: -v
      processors:
        - regex: '^Version\s(.*?)\s'
    remote:
      cmd: gh
      args: api repos/grafana/grafana/releases/latest -q ".tag_name"
      processors:
        - regex: 'v(.*)'
  - name: 'Prometheus'
    local:
      cmd: prometheus
      args: --version
      processors:
        - regex: '^prometheus, version\s(.*?)\s'
    remote:
      cmd: gh
      args: api repos/prometheus/prometheus/releases/latest -q ".tag_name"
      processors:
        - regex: 'v(.*)'
  - name: 'Loki'
    local:
      cmd: loki
      args: --version
      processors:
        - regex: '^loki, version\s(.*?)\s'
    remote:
      cmd: gh
      args: api repos/grafana/loki/releases/latest -q ".tag_name"
      processors:
        - regex: 'v(.*)'
  - name: 'FreshRSS'
    local:
      cmd: cat
      args: constants.php
      work_dir: /var/www/freshrss
      processors:
        - regex: "'FRESHRSS_VERSION', '(.*?)'"
    remote:
      cmd: gh
      args: api repos/FreshRSS/FreshRSS/releases/latest -q ".tag_name"
      processors:
        - regex: '(.*)'
  - name: 'Matomo'
    local:
      cmd: bash
      args: -c "sudo chmod +x console && sudo -u www-data ./console core:version"
      work_dir: /var/www/matomo
    remote:
      cmd: gh
      args: api repos/matomo-org/matomo/releases/latest -q ".tag_name"
      processors:
        - regex: 'v(.*)'